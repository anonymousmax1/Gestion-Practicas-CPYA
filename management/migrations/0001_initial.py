# Generated by Django 5.1.3 on 2024-12-10 21:02

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Formation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=9, unique=True)),
                ("name", models.CharField(max_length=100)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "cellphone",
                    models.CharField(
                        blank=True,
                        max_length=17,
                        null=True,
                        verbose_name="Número de teléfono",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("1", "Cédula De Ciudadanía"),
                            ("2", "Tarjeta De Identidad"),
                            ("3", "Permiso Especial De Permanencia"),
                        ],
                        default="1",
                        max_length=2,
                    ),
                ),
                (
                    "document",
                    models.CharField(
                        max_length=15,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_registration",
                                message="Ingrese un número de documento váalido",
                                regex="^\\d{6,15}$",
                            )
                        ],
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254)),
                (
                    "email_sena",
                    models.EmailField(blank=True, max_length=100, null=True),
                ),
                ("cellphone", models.CharField(blank=True, max_length=100, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("address", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "neighborhood",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("1", "Sin Contrato"),
                            ("2", "En Seguimiento"),
                            ("3", "Sin Seguimiento"),
                            ("4", "Evaluado"),
                            ("5", "Cancelado"),
                        ],
                        default="1",
                        max_length=2,
                    ),
                ),
                (
                    "formation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="management.formation",
                    ),
                ),
                (
                    "instructor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="students",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ContractInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contract_type",
                    models.CharField(
                        choices=[
                            ("1", "Contrato De Apendizaje"),
                            ("2", "Pasantía"),
                            ("3", "Vínculo Laboral"),
                            ("4", "Proyecto Productivo"),
                        ],
                        default="1",
                        max_length=2,
                    ),
                ),
                ("enterprise_name", models.CharField(max_length=100)),
                ("enterprise_address", models.CharField(max_length=100)),
                ("enterprise_neighborhood", models.CharField(max_length=100)),
                ("enterprise_region", models.CharField(max_length=100)),
                ("enterprise_city", models.CharField(max_length=100)),
                ("enterprise_cellphone", models.CharField(max_length=100)),
                ("enterprise_phone", models.CharField(max_length=100)),
                ("enterprise_email", models.EmailField(max_length=254)),
                ("boss_name", models.CharField(max_length=100)),
                ("practices_start_date", models.DateField()),
                ("practices_end_date", models.DateField()),
                ("enterprise_nit", models.CharField(max_length=100)),
                ("student_eps", models.CharField(max_length=100)),
                ("student_arl", models.CharField(max_length=100)),
                (
                    "student",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contract",
                        to="management.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Advancement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("binnacle", models.PositiveIntegerField(default=0)),
                ("has_partial", models.BooleanField(default=False)),
                ("has_final", models.BooleanField(default=False)),
                ("has_concertation", models.BooleanField(default=False)),
                (
                    "student",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="advancement",
                        to="management.student",
                    ),
                ),
            ],
        ),
    ]
